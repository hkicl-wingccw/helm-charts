apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "appname" . }}-{{ include "orgname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "explorer-db.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 30  # removes old replicasets for deployment rollbacks
  strategy:
    rollingUpdate:
      maxUnavailable: 0  # Avoid Terminating and ContainerCreating at the same time
  selector:
    matchLabels:
      {{- include "explorer-db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "explorer-db.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: sa-{{ include "appname" . }}-{{ include "orgname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if and .Values.persistence.enabled }}
        - name: my-pvc
          persistentVolumeClaim:
            claimName: pvc-{{ include "appname" . }}-{{ include "orgname" . }}
        {{- end }}
        {{- if .Values.configmap.enabled }}
        - name: my-cm
          configMap:
            name: cm-{{ include "appname" . }}-{{ include "orgname" . }}
            defaultMode: 0777
        {{- end }}
      containers:
        - name: {{ include "appname" . }}-{{ include "orgname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "hyperledger/explorer-db:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
          livenessProbe:
            exec:
              command: ['pg_isready','-h', 'localhost', '-p', '5432', '-q', '-U', 'postgres']
            initialDelaySeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 30
          env:
            - name: DATABASE_DATABASE
              value: fabricexplorer
            - name: DATABASE_USERNAME
              value: {{ .Values.database_username }}
            - name: DATABASE_PASSWORD
              value: {{ .Values.database_passwd }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: my-pvc
              subPath: data
            - mountPath: /docker-entrypoint-initdb.d/createdb.sh
              name: my-cm
              subPath: createdb.sh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
